syntax = "proto3";

package api;

option go_package = "pkg/crud;crud";

import "google/api/annotations.proto";

service CRUD{
    // create note
    rpc CreateNote(CreateRequest) returns (Status){
        option (google.api.http) = {
            post: "/api/v1/create"
            body: "*"
        };
    }

    // read note
    rpc ReadNote(ReadRequest) returns (Response){
        option (google.api.http) = {
            get: "/api/v1/read/{id}"
        };
    }

    // update note
    rpc UpdateNote(UpdateRequest) returns (Status){
        option (google.api.http) = {
            put: "/api/v1/update/{id}"
            body: "*"
        };
    }

    // delete note
    rpc DeleteNote(DeleteRequest) returns (Status){
        option (google.api.http) = {
            delete: "/api/v1/delete/{id}"
        };
    }

     // produce to kafka
     rpc KafkaSendMessage(KafkaRequest) returns (KafkaResponse){
        option (google.api.http) = {
            post: "/api/v1/produce"
            body: "*"
        };
    }

    // consume from kafka
    rpc KafkaReadMessage(KafkaRequest) returns (KafkaResponse){
        option (google.api.http) = {
            get: "/api/v1/response"
        };
    }
}

message KafkaRequest{
    string request = 1;
}

message KafkaResponse{
    string response = 1;
}

message Status{
    string status = 1;
}

message ReadRequest{
    int64 id = 1;
}

message UpdateRequest{
    int64 id = 1;
    string title = 2;
    string text = 3;
    string tags = 4;
}

message DeleteRequest{
    int64 id = 1;
}

message CreateRequest{
    int64  id = 1;  
    string title = 2;
    string text = 3;
    string tags = 4;
}

message Response{
    int64 id = 1;
    string title = 2;
    string text = 3;
    string tags = 4;
    string status = 5;
}